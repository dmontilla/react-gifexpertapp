{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","components/helpers/getGifs.js","components/GifGrid.js","components/hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputvalue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifts","category","a","fetch","encodeURI","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACrCN,EAAc,MAKlB,SACI,uBACIO,KAAM,OACNC,MAAST,EACTU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCNlBG,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEpC,OACI,sBAAKC,UAAU,6CAAf,UACI,qBAAKC,IAAOF,EAAKG,IAAOJ,IACxB,4BAAIA,Q,uBCPHK,EAAQ,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,4DACL,mCACTN,EAFc,uDACL,mCADK,cAIDO,MAAMP,EAAG,YAAQQ,UAAUH,GAAlB,cAJR,cAIdI,EAJc,gBAKCA,EAAKC,OALN,uBAKbC,EALa,EAKbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAXtB,kBAebY,GAfa,4CAAH,sDCORK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SASrB,ECZwB,SAACA,GAEzB,MAA0BrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNjB,EAASC,GACJiB,MAAK,SAAAR,GACFM,EAAS,CACLT,KAAKG,EACLI,SAAU,SAGvB,CAACb,IAEGc,EDLwBI,CAAalB,GAAhCU,EAAZ,EAAOJ,KAAaO,EAApB,EAAoBA,QAEpB,OACI,qCASKA,GAAW,wCACZ,6BAAKb,IAEDU,EAAOF,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADGA,EAAIhB,WEIpB0B,EAjCa,WAGxB,MAAoCxC,mBAAS,CAAC,cAA9C,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAOA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAEJ,6BAMQ0C,EAAWZ,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAYA,GADLA,Y,MCtB/BqB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.8f4b2481.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputvalue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputvalue.trim().length > 2){\r\n            setCategories(cat => [inputvalue, ...cat]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <input \r\n                type =\"text\"\r\n                value = {inputvalue}\r\n                onChange = {handleInputChange}\r\n\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInLeft\">\r\n            <img src = {url} alt = {title} />\r\n            <p>{title}</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","export const getGifts = async ( category ) => {\r\n    const apiKey = 'UWIbrXo2ASgpgB1Nz7uj5zQvZxHZJHv3';\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&`;\r\n\r\n    const resp = await fetch(url + `q=${encodeURI(category)}&limit=10`);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","//import React, { useEffect, useState } from 'react'\r\nimport React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\n//import { getGifts } from './helpers/getGifs';\r\nimport { useFetchGifs } from './hooks/useFetchGifs';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    // useEffect(() => {\r\n    //     getGifts(category)\r\n    //         .then(setImages);\r\n    // }, [ category]);\r\n    \r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            {/* <h3>{category}</h3>\r\n            <ol>\r\n                {\r\n                    images.map( img => (\r\n                        <li key ={img.id}>{img.title}</li>\r\n                    ))\r\n                }\r\n            </ol> */}\r\n            {loading && <p>Loading</p>}\r\n            <h3>{category}</h3>\r\n            {\r\n                images.map( img => (\r\n                    <GifGridItem \r\n                        key = {img.id}    \r\n                        {...img} \r\n                    />\r\n                ))\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useState } from \"react\"\r\nimport { getGifts } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifts(category)\r\n            .then(img => {\r\n                setState({\r\n                    data:img,\r\n                    loading : false\r\n                })\r\n            })\r\n    }, [category]);\r\n\r\n    return state;\r\n    \r\n}\r\n","import React,{useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punh', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One Punch', ]);\r\n\r\n    // const handleAdd = () => {\r\n    //     //setCategories([...categories, 'HunterX']);\r\n    //     setCategories(cat => [...cat, 'HunterX']);\r\n    // }\r\n\r\n    return (\r\n        <>            \r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = {setCategories}/>\r\n            <hr/>\r\n        \r\n        <ol>\r\n            {\r\n                // categories.map((category, idx) => {\r\n                //     return <li key={category}> {category} </li>\r\n                // })\r\n\r\n                categories.map(category => (\r\n                    <GifGrid \r\n                        key = {category}\r\n                        category = {category}/>\r\n                ))\r\n            }\r\n        </ol>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}